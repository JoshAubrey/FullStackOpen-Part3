{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/PersonDetails.js","components/Persons.js","components/Notification.js","services/personService.js","App.js","serviceWorker.js","index.js"],"names":["Filter","value","onChange","PersonForm","addPerson","newName","handleNameChange","newNumber","handleNumberChange","onSubmit","type","PersonDetails","person","deletePerson","key","id","name","number","onClick","Persons","personsToShow","map","Notification","message","error","className","baseUrl","axios","get","then","response","data","newObject","post","put","delete","App","useState","persons","setPersons","setNewName","setNewNumber","newSearch","setNewSearch","notification","setNotification","setError","useEffect","personService","initialPersons","filter","toLowerCase","includes","event","target","preventDefault","some","window","confirm","personToChange","find","p","changedPerson","returnedPerson","catch","setTimeout","personObject","length","concat","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.ba244d19.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Filter = ({value, onChange}) => {\r\n    return (\r\n      <div>\r\n        filter name: <input value={value} onChange={onChange}/>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst PersonForm = ({addPerson, newName, handleNameChange, newNumber, handleNumberChange}) => {\r\n    return (\r\n      <div>\r\n        <form onSubmit={addPerson}>\r\n            <div>\r\n                name: <input value={newName} onChange={handleNameChange}/>\r\n            </div>\r\n            <div>\r\n                number: <input value={newNumber} onChange={handleNumberChange}/>\r\n            </div>\r\n            <div>\r\n                <button type=\"submit\">add</button>\r\n            </div>\r\n        </form>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst PersonDetails = ({person, deletePerson}) => {\r\n    return (\r\n      <div>\r\n        <li key={person.id}>\r\n          {person.name} {person.number} <button onClick={deletePerson}>delete</button>\r\n        </li>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default PersonDetails","import React from 'react'\r\nimport PersonDetails from './PersonDetails'\r\n\r\nconst Persons = ({personsToShow, deletePerson}) => {\r\n    return (\r\n      <div>\r\n        <ul>\r\n            {personsToShow.map(person => <PersonDetails key={person.id} person={person} deletePerson={() => deletePerson(person.id)}/>)}\r\n        </ul>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Persons","import React from 'react'\r\n\r\nconst Notification = ({ message, error }) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n    else if (error === true) {\r\n        return (\r\n            <div className=\"error\">\r\n              {message}\r\n            </div>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <div className=\"notify\">\r\n              {message}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n  export default Notification","import axios from 'axios'\r\n\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst deletePerson = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return request\r\n}\r\n\r\nexport default { getAll, create, update, deletePerson }","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport Notification from './components/Notification'\nimport personService from './services/personService'\n\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newSearch, setNewSearch ] = useState('')\n  const [ notification, setNotification ] = useState(null)\n  const [ error, setError ] = useState(false)\n\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons  => {\n        setPersons(initialPersons)\n      })\n  }, [])\n\n  const addPerson = (event) => {\n    event.preventDefault()\n\n    if (persons.some(person => person.name.includes(newName))){\n      if(window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)){ \n        const personToChange = persons.find(p => p.name === newName)\n        const changedPerson = {...personToChange, number: newNumber}\n\n        personService\n          .update(personToChange.id, changedPerson)\n          .then(returnedPerson => {\n            setPersons(persons.map(p => p.id !== personToChange.id ? p : returnedPerson))\n          })\n          .catch(error => {\n            setError(true)\n            setNotification(\n              `the person '${personToChange.name}' was already deleted from server`\n            )\n            setTimeout(() => {\n              setError(false)\n              setNotification(null)\n            }, 5000)\n            setPersons(persons.filter(p => p.id !== personToChange.id))\n          })\n        setNewName('')\n        setNewNumber('')\n      }\n    }\n    else {\n      const personObject = {\n        id: persons.length + 1,\n        name: newName,\n        number: newNumber,\n      }\n\n      personService\n        .create(personObject)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          setNewName('')\n          setNewNumber('')\n        })\n\n        setNotification(\n          `Added '${personObject.name}'`\n        )\n        setTimeout(() => {\n          setNotification(null)\n        }, 5000)\n    }\n  }\n\n  const deletePerson = (id) => {\n    const person = persons.find(p => p.id === id)\n    if(window.confirm(`Delete ${person.name} ?`)){\n      personService\n      .deletePerson(id)\n      .then(\n        setPersons(persons.filter(p => p.id !== id))\n      )\n      .catch(error => {\n        setError(true)\n        setNotification(\n          `the person '${person.name}' was already deleted from server`\n        )\n        setTimeout(() => {\n          setError(false)\n          setNotification(null)\n        }, 5000)\n        setPersons(persons.filter(p => p.id !== id))\n      })\n    }\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleSearchChange = (event) => {\n    setNewSearch(event.target.value)\n  }\n\n  const personsToShow = newSearch === ''\n    ? persons\n    : persons.filter(person => person.name.toLowerCase().includes(newSearch.toLowerCase()))\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Notification message={notification} error={error}/>\n      <Filter value={newSearch} onChange={handleSearchChange}/>\n\n      <h2>Add new</h2>\n      <PersonForm\n         addPerson = {addPerson}\n         newName = {newName}\n         handleNameChange = {handleNameChange}\n         newNumber = {newNumber}\n         handleNumberChange = {handleNumberChange}     \n      />\n\n      <h3>Numbers</h3>\n      <Persons personsToShow={personsToShow} deletePerson={deletePerson}/>\n    </div>\n  )\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}